name: Docker Image CI

on:
  push:
    branches: 
      - master

  workflow_dispatch: 

env:
  AWS_REGION: eu-west-1
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  REPO_NAME: ${{ secrets.REPO_NAME }}
  DEFAULT_REPO_NAME: artist-info

jobs:

  build:

    runs-on: ubuntu-latest

    steps:


      - name: setup sdk
        run: npm install aws-sdk

      - uses: actions/github-script@v5
        with:
          repository: aws-sdk
          script: |
            const AWS = require('aws-sdk')
            const cloudcontrol = new AWS.CloudControl()
            const { REPO_NAME, DEFAULT_REPO_NAME } = process.env
            const ecrRepository = REPO_NAME || DEFAULT_REPO_NAME

            try {
              await cloudcontrol.getResource({
                "TypeName": "AWS::ECR::Repository",
                "Identifier": ecrRepository
              }).promise()

            } catch (e) {
              // aws repo does not exist - create it
              console.error('failed - will create repo!',e)

              const response = await cloudcontrol.createResource({
                TypeName: "AWS::ECR::Repository",
                DesiredState: `{
                  "RepositoryName": ${ecrRepository},
                  "ImageTagMutability": "MUTABLE"
                }`
              }).promise()

              console.log(response)

            }
