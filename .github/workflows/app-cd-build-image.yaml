name: Docker Image CI

on:
  push:
    branches: 
      - master

  workflow_dispatch: 

env:
  AWS_REGION: eu-west-1
  REPO_NAME: artist-info

jobs:

  build:

    runs-on: ubuntu-latest

    steps:

    - name: Checkout
      uses: actions/checkout@v2

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Login to ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Check if repo exists
      continue-on-error: true
      run: |
        aws cloudcontrol get-resource --type-name AWS::ECR::Repository --identifier artist-info

    - name: Create repo if it doesn't exist
      if: ${{ failure() }}
      run: |
        aws cloudcontrol create-resource --type-name AWS::ECR::Repository --desired-state '{"RepositoryName": "artist-test", "ImageTagMutability": "MUTABLE"}'

    - name: Build, tag, push image to ECR
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: $REPO_NAME
        IMAGE_TAG: latest
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"
