name: cd

on:
  push:
    branches:
      - master
  workflow_dispatch:

env:
  ECR_REPOSITORY_NAME: artist-info

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: '16'

      - id: login-aws
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-1

      - id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - run: npm install aws-sdk

      - id: create-ecr-repo
        uses: actions/github-script@v5
        with:
          script: require('./.github/workflows/ecr_setup.js')

      - id: push-to-ecr
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        run: |
          ECR_IMAGE_NAME=$ECR_REGISTRY/$ECR_REPOSITORY_NAME
          docker build -t $ECR_IMAGE_NAME  .
          docker push $ECR_IMAGE_NAME
          echo "::set-output name=image::$ECR_IMAGE_NAME"

      - uses: actions/github-script@v5
        env:
          AWS_ACCOUNT_ID: ${{ steps.login-aws.outputs.aws-account-id }}
          ECR_IMAGE_NAME: ${{ steps.push-to-ecr.outputs.image }}
        with:
          script: require('./.github/workflows/apprunner_setup.js')
